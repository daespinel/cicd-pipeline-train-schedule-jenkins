variables:
- group: 'ssh-connections'
 
trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildGradleProject
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
    - task: CmdLine@2
      inputs:
        script: ls -alh dist/
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/dist/trainSchedule.zip'
        artifact: 'trainSchedule.zip'
        publishLocation: 'pipeline'
  - job: BuildDockerImage
    dependsOn: BuildGradleProject
    steps:
    - task: Docker@2
      displayName: 'Building and Pushing Docker Image' 
      inputs:
        containerRegistry: 'docker-registry'
        repository: 'dafespinelsa/train-schedule'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
  
- stage: Test
  jobs:
  - job: Testing
    steps:
    - task: Bash@3
      inputs:
          targetType: 'inline'
          script: |
            echo "Using the environment connection $env:SSH_CONNECTION"
      env:
        SSH_CONNECTION: $(id_rsa.pub)
        
- stage: Staging
  jobs:
  - job: DeployingDockerSSHtoStaging
    variables:
      DOCKER_IMAGE_NAME: dafespinelsa/train-schedule
      BUILD_NUMBER: $(Build.BuildId)
    steps:

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'kube-config-stage'
        command: 'create'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/train-kube-azure.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'docker-registry'

- stage: Production
  jobs:
  - job: waitForValidation
    displayName: Wait for external validation - Staging OK?
    pool: server
    timeoutInMinutes: 4320
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: 
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'resume'
  
  - job: CopyFilesOverSSHtoProduction
    dependsOn: waitForValidation
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'production-server'
        runOptions: 'inline'
        inline: |
          sudo docker pull dafespinelsa/train-schedule:$(Build.BuildId) 
          sudo docker stop train-schedule 
          sudo docker rm train-schedule 
          sudo docker run --restart always --name train-schedule -p 3000:3000 -d dafespinelsa/train-schedule:$(Build.BuildId) 
        readyTimeout: '20000'